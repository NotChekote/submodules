#!/usr/bin/env bash

set -euo pipefail

dir="$(pwd)"
hooks="$dir"/.git/hooks
script_name="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"


if [[ ! -d .git ]]; then
  echo "$script_name must be ran from the root of a git repository";
fi;

echo "Checking Git hooks..."

#######################################
# Prompts user to ask if we can delete
# hooks folder, exits if answer is no
#######################################
exit_if_not_willing_to_remove_dir () {
    local response

    while true; do
        read -r -p "Symbolic link is NOT configured correctly. We need to remove the git hooks directory. Is that okay? (y/n)" response
        case "$response" in
            [Yy]* ) break;;
            [Nn]* )  echo "Git hook initialization canceled by user"; exit 1;;
            * ) echo "Please answer yes or no (y/n).";;
        esac
    done
}

#######################################
# Create the hooks sym link
#
# Globals:
#   hooks
#######################################
create_sym_link () {
    echo "Creating symbolic link..."
    ln -s ../hooks "$hooks"
}

if [[ -L "$hooks" ]]; then
  echo "Git hooks symbolic link is already in place."
  if [[ "$(readlink "$hooks")" == ../hooks ]]; then
    echo "Symbolic link is configured correctly."
  else
    if [[ "${CI:-}" != true ]] ; then
        exit_if_not_willing_to_remove_dir
    fi
    echo "Removing..."
    rm "$hooks"

    create_sym_link
  fi
else
  echo "Git hooks symbolic link is not in place."
  if [[ -e "$hooks" ]]; then
    if [[ "${CI:-}" != true ]] ; then
        exit_if_not_willing_to_remove_dir
    fi
    rm -rf "$hooks"
  fi

  create_sym_link
fi

echo "Git hooks symbolic link setup is complete."
